// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3853.ProgTrainingRobot.subsystems;

import org.usfirst.frc3853.ProgTrainingRobot.RobotMap;
import org.usfirst.frc3853.ProgTrainingRobot.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class Lift extends Subsystem {
  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
  SpeedController liftMotor = RobotMap.liftLiftMotor;
  DigitalInput upperLimit = RobotMap.liftupperLimit;
  DigitalInput lowerLimit = RobotMap.liftlowerLimit;
  private final double LIFT_SPEED = .5;

  // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

  // Put methods for controlling this subsystem
  // here. Call these from Commands.

  public boolean isOnUpperLimit() {
    if (upperLimit.get()) {
      return true;
    } else {
      return false;
    }

  }

  public boolean isOnLowerLimit() {
    if (lowerLimit.get()) {
      return true;
    } else {
      return false;
    }

  }

  public void raiseLift() {
    if (!isOnUpperLimit()) {
      liftMotor.set(LIFT_SPEED);
    } else {
      liftMotor.set(0);
    }
  }

  public void lowerLift() {
    if (!isOnLowerLimit()) {
      liftMotor.set(-LIFT_SPEED);
    } else {
      liftMotor.set(0);
    }

  }

  public void stop() {
    liftMotor.set(0);
  }

  public void initDefaultCommand() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // Set the default command for a subsystem here.
    // setDefaultCommand(new MySpecialCommand());
  }
}
